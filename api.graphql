### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

type Candle {
  baseAssetVolume: Decimal!
  close: Decimal!
  closeTime: DateTime!
  high: Decimal!
  id: ID!
  interval: CandleInterval!
  low: Decimal!
  open: Decimal!
  openTime: DateTime!
  quoteAssetVolume: Decimal!
  quoteVolume: Decimal!
  symbol: Symbol!
  symbolId: String!
  trades: Int!
  volume: Decimal!
}

enum CandleInterval {
  EIGHT_HOURS
  FIFTEEN_MINUTES
  FIVE_MINUTES
  FOUR_HOURS
  ONE_DAY
  ONE_HOUR
  ONE_MINUTE
  ONE_MONTH
  ONE_WEEK
  SIX_HOURS
  THIRTY_MINUTES
  THREE_DAYS
  THREE_MINUTES
  TWELVE_HOURS
  TWO_HOURS
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  test: Boolean!
}

type Price {
  date: DateTime!
  id: ID!
  price: Decimal!
  realDate: DateTime
  symbol: Symbol!
  symbolId: String!
}

type Query {
  price(date: DateTime, symbol: String!): Price
}

type Symbol {
  candles: [Candle!]!
  id: ID!
  prices: [Price!]!
  symbol: String!
}
