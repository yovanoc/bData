### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Candle {
  baseAssetVolume: Decimal!
  close: Decimal!
  closeTime: DateTime!
  high: Decimal!
  id: String!
  interval: CandleInterval!
  low: Decimal!
  open: Decimal!
  openTime: DateTime!
  quoteAssetVolume: Decimal!
  quoteVolume: Decimal!
  symbol: Symbol!
  symbolId: String!
  trades: Int!
  volume: Decimal!
}

enum CandleInterval {
  EIGHT_HOURS
  FIFTEEN_MINUTES
  FIVE_MINUTES
  FOUR_HOURS
  ONE_DAY
  ONE_HOUR
  ONE_MINUTE
  ONE_MONTH
  ONE_WEEK
  SIX_HOURS
  THIRTY_MINUTES
  THREE_DAYS
  THREE_MINUTES
  TWELVE_HOURS
  TWO_HOURS
}

input CandleWhereUniqueInput {
  id: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

scalar Decimal

type Mutation {
  test: Boolean!
}

type Price {
  date: DateTime!
  id: String!
  price: Decimal!
  realDate: DateTime
  symbol: Symbol!
  symbolId: String!
}

input PriceWhereUniqueInput {
  id: String
}

type Query {
  price(date: DateTime, symbol: String!): Price
}

type Symbol {
  candles(after: CandleWhereUniqueInput, before: CandleWhereUniqueInput, first: Int, last: Int): [Candle!]!
  id: String!
  prices(after: PriceWhereUniqueInput, before: PriceWhereUniqueInput, first: Int, last: Int): [Price!]!
  symbol: String!
}
